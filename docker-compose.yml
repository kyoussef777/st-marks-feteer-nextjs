version: '3.8'

services:
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-app-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      # Mount source code for development hot reloading
      - .:/app
      - /app/node_modules
      - /app/.next
      # Mount SQLite database to persist data
      - ./db.sqlite3:/app/db.sqlite3
    restart: unless-stopped
    networks:
      - app-network

  # Optional: Add a database container for production use
  # sqlite is file-based, but you might want to add PostgreSQL or MySQL
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: nextjs-postgres
  #   environment:
  #     POSTGRES_USER: nextjs
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: nextjs_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  # Optional: Add Redis for session storage/caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: nextjs-redis
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network

  # Optional: Add Nginx for reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: nextjs-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - nextjs-app
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data: